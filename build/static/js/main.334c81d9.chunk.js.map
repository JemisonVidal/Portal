{"version":3,"sources":["config/initFirebase.ts","store/authStore.ts","services/auth.ts","components/alert/alert.tsx","services/alertService.ts","components/template/header/header.tsx","components/template/main/main.tsx","components/home/home.tsx","components/dashboard/dashboard.tsx","components/quadro/quadro.tsx","components/perfil/perfil.tsx","routes/Routes.jsx","components/contato/contato.tsx","components/login/login.tsx","components/singUp/singUp.tsx","routes/RoutesAuth.jsx","components/start/start.tsx","components/progress/progress.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["app","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","enablePersistence","authStore","observable","authService","auth","onAuthStateChanged","action","user","a","oldUser","loggedUser","isCheckedAuth","doReload","window","location","pathname","email","password","stayLoggedI","setPersistence","signInWithEmailAndPassword","signOut","createUserWithEmailAndPassword","sendPasswordResetEmail","AlertOpen","props","elevation","variant","Alert","inject","observer","this","classes","alertService","message","className","root","onClose","severity","React","Component","withStyles","theme","width","marginTop","spacing","type","Header","state","drawerOpen","handleDrawerOpen","setState","handleDrawerClose","handlePreventDefault","event","preventDefault","CssBaseline","AppBar","position","clsx","appBar","appBarShift","Toolbar","IconButton","color","aria-label","onClick","edge","menuButton","hide","Drawer","drawer","drawerClose","paper","toolbarPefil","ListItem","button","component","to","key","ListItemIcon","colorIcon","ListItemText","primary","toolbar","Divider","List","createStyles","display","zIndex","transition","transitions","create","easing","sharp","duration","leavingScreen","enteringScreen","paddingLeft","marginRight","flexShrink","whiteSpace","backgroundColor","palette","main","overflowX","justifyContent","alignItems","padding","breakpoints","up","mixins","content","flexGrow","Main","Fragment","children","flex","minWidth","minHeight","Home","Grid","container","Paper","margin","Dashboard","Quadro","Perfil","item","xs","sm","Card","CardContent","details","Typography","gutterBottom","locationText","dateText","moment","format","Avatar","avatar","src","TextField","fullWidth","helperText","label","name","required","select","SelectProps","native","CardActions","Button","car","marginLeft","height","uploadButton","exact","path","from","componet","Contato","md","image","open","social","flexDirection","borderRadius","backgroundImage","backgroundRepeat","grey","backgroundSize","backgroundPosition","Login","isLoading","stayLoggedIn","showPassword","emailRef","createRef","passwordRef","handleEmailChange","target","value","handlePasswordChange","handleEmailBlur","current","validate","handlePasswordBlur","handleStayLoggedIn","handleLoginSubmit","addNotification","Auth","login","onSubmit","square","form","noValidate","onChange","id","validators","errorMessages","onBlur","ref","autoComplete","FormControlLabel","control","Checkbox","checked","submit","colorLink","query","render","secondary","paddingRight","buttonSocial","SingUp","firstNameRef","lastNameRef","firstName","lastName","handleFirstNameChange","handleLastNameChange","handleFirstNameBlur","handleLastNameBlur","handleCreateAccount","code","autoFocus","justify","Start","Progress","completed","progress","LinearProgress","timer","setInterval","diff","Math","random","oldCompleted","min","clearInterval","maxHeight","maxWidth","createMuiTheme","typography","fontFamily","join","background","default","contrastText","App","providerProps","AlertService","startListenFirebaseAuthChange","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.334c81d9.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\r\nimport \"firebase/storage\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/functions\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/performance\";\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyASfKzSBBC2VFxXKuaG5EA-lYWbdYAI1y4\",\r\n  authDomain: \"portal-b9d08.firebaseapp.com\",\r\n  databaseURL: \"https://portal-b9d08.firebaseio.com\",\r\n  projectId: \"portal-b9d08\",\r\n  storageBucket: \"portal-b9d08.appspot.com\",\r\n  messagingSenderId: \"1005025203232\",\r\n  appId: \"1:1005025203232:web:9b5871525380d7b25cd845\",\r\n  measurementId: \"G-RYLV5Y0V4X\",\r\n};\r\n\r\nconst app = firebase.initializeApp(config);\r\nexport const firestore = app.firestore();\r\nfirestore.enablePersistence();\r\nfirebase.performance();\r\nexport default app;\r\n","import { observable } from \"mobx\";\r\n\r\nclass AuthStore {\r\n  @observable\r\n  public loggedUser: firebase.User;\r\n\r\n  @observable\r\n  public isCheckedAuth = false;\r\n}\r\n\r\nconst authStore = new AuthStore();\r\nexport default authStore;\r\n","import app from \"config/initFirebase\";\r\nimport { action } from \"mobx\";\r\nimport authStore from \"store/authStore\";\r\n\r\nexport class AuthService {\r\n  public startListenFirebaseAuthChange() {\r\n    app.auth().onAuthStateChanged(\r\n      action(async (user: firebase.User) => {\r\n        const oldUser = authStore.loggedUser;\r\n        authStore.loggedUser = user;\r\n        authStore.isCheckedAuth = true;\r\n        this.doReload({ oldUser, user });\r\n      })\r\n    );\r\n  }\r\n\r\n  private doReload({\r\n    oldUser,\r\n    user,\r\n  }: {\r\n    oldUser: firebase.User;\r\n    user: firebase.User;\r\n  }) {\r\n    if (!user && oldUser) {\r\n      window.location.pathname = \"/\";\r\n    } else if (oldUser && oldUser !== user) {\r\n      window.location.pathname = \"/\";\r\n    }\r\n  }\r\n\r\n  public async login(\r\n    email: string,\r\n    password: string,\r\n    stayLoggedI: boolean = false\r\n  ) {\r\n    await app.auth().setPersistence(stayLoggedI ? \"local\" : \"session\");\r\n    await app.auth().signInWithEmailAndPassword(email, password);\r\n  }\r\n\r\n  public async logOut() {\r\n    await app.auth().signOut();\r\n  }\r\n\r\n  public async createUserWithEmailAndPassword(email: string, password: string) {\r\n    await app.auth().createUserWithEmailAndPassword(email, password);\r\n  }\r\n\r\n  public async sendPasswordResetEmail(email: string) {\r\n    await app.auth().sendPasswordResetEmail(email);\r\n  }\r\n}\r\n\r\nconst authService = new AuthService();\r\nexport default authService;\r\n","import React from \"react\";\r\nimport { inject, observer } from \"mobx-react\";\r\nimport { AlertService } from \"../../services/alertService\";\r\nimport { Theme, withStyles } from \"@material-ui/core\";\r\nimport MuiAlert, { AlertProps } from \"@material-ui/lab/Alert\";\r\n\r\ninterface Props {\r\n  classes?: any;\r\n  alertService?: AlertService;\r\n}\r\n\r\nconst useStyles = (theme: Theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    \"& > * + *\": {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    elevation: 6,\r\n    variant: \"filled\",\r\n  },\r\n});\r\n\r\nfunction AlertOpen(props: AlertProps) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\n@inject(\"alertService\")\r\n@observer\r\nclass Alert extends React.Component<Props> {\r\n  public render() {\r\n    const { classes, alertService } = this.props;\r\n\r\n    const handleCloseAlert = () => {\r\n      alertService.message = \"\";\r\n    };\r\n\r\n    return !alertService.message ? (\r\n      <div></div>\r\n    ) : (\r\n      <div className={classes.root}>\r\n        <AlertOpen\r\n          onClose={handleCloseAlert}\r\n          severity={\"error\"}\r\n          variant=\"outlined\"\r\n        >\r\n          {alertService.message}\r\n        </AlertOpen>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles)(Alert);\r\n","import { observable, action } from \"mobx\";\r\n\r\nexport class AlertService {\r\n  @observable\r\n  public message: string = null;\r\n  public type: string = \"error\";\r\n\r\n  @action\r\n  public addNotification(message: string, type: string) {\r\n    this.message = message;\r\n    this.type = type;\r\n  }\r\n}\r\n\r\nconst alertService = new AlertService();\r\nexport default alertService;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport clsx from \"clsx\";\r\nimport {\r\n  createStyles,\r\n  withStyles,\r\n  Theme,\r\n  Drawer,\r\n  AppBar,\r\n  Toolbar,\r\n  List,\r\n  CssBaseline,\r\n  Typography,\r\n  Divider,\r\n  IconButton,\r\n  ListItem,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\n\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport HomeRoundedIcon from \"@material-ui/icons/HomeRounded\";\r\nimport DashboardRoundedIcon from \"@material-ui/icons/DashboardRounded\";\r\nimport ViewColumnRoundIcon from \"@material-ui/icons/ViewColumnRounded\";\r\nimport PersonRoundedIcon from \"@material-ui/icons/PersonRounded\";\r\n\r\ninterface IState {\r\n  drawerOpen: boolean;\r\n}\r\ninterface IProps {\r\n  classes: any;\r\n}\r\n\r\nconst drawerWidth = 240;\r\nconst useStyles = (theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: \"flex\",\r\n    },\r\n    appBar: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      transition: theme.transitions.create([\"width\", \"margin\"], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n    },\r\n    appBarShift: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      transition: theme.transitions.create([\"width\", \"margin\"], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    menuButton: {\r\n      paddingLeft: 5,\r\n      marginRight: 30,\r\n    },\r\n    hide: {\r\n      display: \"none\",\r\n    },\r\n    drawer: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n      whiteSpace: \"nowrap\",\r\n    },\r\n    drawerOpen: {\r\n      color: \"#ffff\",\r\n      backgroundColor: theme.palette.primary.main,\r\n      width: drawerWidth,\r\n      transition: theme.transitions.create(\"width\", {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    drawerClose: {\r\n      color: \"#ffff\",\r\n      backgroundColor: theme.palette.primary.main,\r\n      transition: theme.transitions.create(\"width\", {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      overflowX: \"hidden\",\r\n      width: theme.spacing(7) + 1,\r\n    },\r\n    toolbarPefil: {\r\n      display: \"flex\",\r\n      justifyContent: \"flex-start\",\r\n    },\r\n    toolbar: {\r\n      alignItems: \"center\",\r\n      justifyContent: \"flex-end\",\r\n      padding: theme.spacing(0, 1),\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        padding: theme.spacing(1, 1),\r\n      },\r\n      ...theme.mixins.toolbar,\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(3),\r\n    },\r\n    colorIcon: {\r\n      color: \"#ffff\",\r\n    },\r\n  });\r\n\r\nclass Header extends React.Component<IProps, IState> {\r\n  public state = {\r\n    drawerOpen: false,\r\n  };\r\n\r\n  public render() {\r\n    const classes = this.props.classes;\r\n    return (\r\n      <header>\r\n        <div className={classes.root}>\r\n          <CssBaseline />\r\n          <AppBar\r\n            position=\"fixed\"\r\n            className={clsx(classes.appBar, {\r\n              [classes.appBarShift]: this.state.drawerOpen,\r\n            })}\r\n          >\r\n            <Toolbar>\r\n              <IconButton\r\n                color=\"inherit\"\r\n                aria-label=\"open drawer\"\r\n                onClick={this.handleDrawerOpen}\r\n                edge=\"start\"\r\n                className={clsx(classes.menuButton, {\r\n                  [classes.hide]: this.state.drawerOpen,\r\n                })}\r\n              >\r\n                <MenuIcon color=\"inherit\" />\r\n              </IconButton>\r\n            </Toolbar>\r\n          </AppBar>\r\n          <Drawer\r\n            variant=\"permanent\"\r\n            className={clsx(classes.drawer, {\r\n              [classes.drawerOpen]: this.state.drawerOpen,\r\n              [classes.drawerClose]: !this.state.drawerOpen,\r\n            })}\r\n            classes={{\r\n              paper: clsx({\r\n                [classes.drawerOpen]: this.state.drawerOpen,\r\n                [classes.drawerClose]: !this.state.drawerOpen,\r\n              }),\r\n            }}\r\n          >\r\n            <div className={classes.toolbarPefil}>\r\n              <ListItem\r\n                button\r\n                component={(props) => <Link to=\"/perfil\" {...props} />}\r\n                key=\"perfil\"\r\n              >\r\n                <ListItemIcon>\r\n                  <PersonRoundedIcon className={classes.colorIcon} />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Perfil\" />\r\n              </ListItem>\r\n              <div className={classes.toolbar}>\r\n                <IconButton onClick={this.handleDrawerClose}>\r\n                  <ChevronLeftIcon className={classes.colorIcon} />\r\n                </IconButton>\r\n              </div>\r\n            </div>\r\n\r\n            <Divider />\r\n            <List>\r\n              <ListItem\r\n                button\r\n                component={(props) => <Link to=\"/\" {...props} />}\r\n                key=\"home\"\r\n              >\r\n                <ListItemIcon>\r\n                  <HomeRoundedIcon className={classes.colorIcon} />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Home\" />\r\n              </ListItem>\r\n              <ListItem\r\n                button\r\n                component={(props) => <Link to=\"/dashboard\" {...props} />}\r\n                key=\"Dashboard\"\r\n              >\r\n                <ListItemIcon>\r\n                  <DashboardRoundedIcon className={classes.colorIcon} />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Dashboard\" />\r\n              </ListItem>\r\n              <ListItem\r\n                button\r\n                component={(props) => <Link to=\"/quadro\" {...props} />}\r\n                key=\"Quadros\"\r\n              >\r\n                <ListItemIcon>\r\n                  <ViewColumnRoundIcon className={classes.colorIcon} />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Quadro\" />\r\n              </ListItem>\r\n            </List>\r\n          </Drawer>\r\n        </div>\r\n      </header>\r\n    );\r\n  }\r\n\r\n  private handleDrawerOpen = () => {\r\n    this.setState({ drawerOpen: true });\r\n  };\r\n\r\n  private handleDrawerClose = () => {\r\n    this.setState({ drawerOpen: false });\r\n  };\r\n\r\n  private handlePreventDefault = (event: any) => {\r\n    event.preventDefault();\r\n  };\r\n}\r\n\r\nexport default withStyles(useStyles)(Header);\r\n","import React from \"react\";\r\nimport { createStyles, withStyles, Theme } from \"@material-ui/core\";\r\nimport Header from \"../header/header\";\r\n\r\nconst UseStyles = (theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flex: 1,\r\n      minWidth: \"100vh\",\r\n      minHeight: \"100vh\",\r\n    },\r\n  });\r\n\r\ninterface IState {}\r\n\r\ninterface IProps {\r\n  classes: any;\r\n}\r\n\r\nclass Main extends React.Component<IProps, IState> {\r\n  render() {\r\n    const classes = this.props.classes;\r\n    return (\r\n      <React.Fragment>\r\n        <Header />\r\n        <main className={classes.root}>{this.props.children}</main>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default withStyles(UseStyles)(Main);\r\n","import React from \"react\";\r\nimport {\r\n  Theme,\r\n  createStyles,\r\n  withStyles,\r\n  LinearProgress,\r\n  Grid,\r\n  CssBaseline,\r\n  Paper,\r\n} from \"@material-ui/core/\";\r\nimport Main from \"../template/main/main\";\r\n\r\nconst useStyles = (theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      minWidth: \"100vh\",\r\n      minHeight: \"100vh\",\r\n      flex: 1,\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      margin: theme.spacing(6.5, 0, 0, 7),\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        margin: theme.spacing(8, 0, 0, 7),\r\n      },\r\n      flex: 1,\r\n      flexDirection: \"column\",\r\n    },\r\n  });\r\n\r\ninterface Props {\r\n  classes: any;\r\n}\r\n\r\nclass Home extends React.Component<Props> {\r\n  public render() {\r\n    const classes = this.props.classes;\r\n\r\n    return (\r\n      <Main>\r\n        <Grid container component=\"main\" className={classes.root}>\r\n          <CssBaseline />\r\n          <Paper className={classes.paper}>Home</Paper>\r\n        </Grid>\r\n      </Main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles)(Home);\r\n","import React from \"react\";\r\nimport {\r\n  Theme,\r\n  createStyles,\r\n  withStyles,\r\n  LinearProgress,\r\n  Grid,\r\n  CssBaseline,\r\n  Paper,\r\n} from \"@material-ui/core/\";\r\nimport Main from \"../template/main/main\";\r\n\r\nconst useStyles = (theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      minWidth: \"100vh\",\r\n      minHeight: \"100vh\",\r\n      flex: 1,\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      margin: theme.spacing(6.5, 0, 0, 7),\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        margin: theme.spacing(8, 0, 0, 7),\r\n      },\r\n      flex: 1,\r\n      flexDirection: \"column\",\r\n    },\r\n  });\r\n\r\ninterface Props {\r\n  classes: any;\r\n}\r\n\r\nclass Dashboard extends React.Component<Props> {\r\n  public render() {\r\n    const classes = this.props.classes;\r\n\r\n    return (\r\n      <Main>\r\n        <Grid container component=\"main\" className={classes.root}>\r\n          <CssBaseline />\r\n          <Paper className={classes.paper}>Dashboard</Paper>\r\n        </Grid>\r\n      </Main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles)(Dashboard);\r\n","import React from \"react\";\r\nimport {\r\n  Theme,\r\n  createStyles,\r\n  withStyles,\r\n  LinearProgress,\r\n  Grid,\r\n  CssBaseline,\r\n  Paper,\r\n} from \"@material-ui/core/\";\r\nimport Main from \"../template/main/main\";\r\n\r\nconst useStyles = (theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      minWidth: \"100vh\",\r\n      minHeight: \"100vh\",\r\n      flex: 1,\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      margin: theme.spacing(6.5, 0, 0, 7),\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        margin: theme.spacing(8, 0, 0, 7),\r\n      },\r\n      flex: 1,\r\n      flexDirection: \"column\",\r\n    },\r\n  });\r\n\r\ninterface Props {\r\n  classes: any;\r\n}\r\n\r\nclass Quadro extends React.Component<Props> {\r\n  public render() {\r\n    const classes = this.props.classes;\r\n\r\n    return (\r\n      <Main>\r\n        <Grid container component=\"main\" className={classes.root}>\r\n          <CssBaseline />\r\n          <Paper className={classes.paper}>Quadro</Paper>\r\n        </Grid>\r\n      </Main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles)(Quadro);\r\n","import React from \"react\";\r\nimport {\r\n  Theme,\r\n  createStyles,\r\n  withStyles,\r\n  Grid,\r\n  CssBaseline,\r\n  Paper,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Avatar,\r\n  Typography,\r\n  Divider,\r\n  Button,\r\n  TextField,\r\n  CardHeader,\r\n} from \"@material-ui/core/\";\r\nimport clsx from \"clsx\";\r\nimport moment from \"moment\";\r\nimport Main from \"../template/main/main\";\r\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\r\n\r\nconst useStyles = (theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      minWidth: \"100vh\",\r\n      minHeight: \"100vh\",\r\n      flex: 1,\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(1),\r\n      margin: theme.spacing(5, 0, 0, 7),\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        margin: theme.spacing(6, 0, 0, 7),\r\n      },\r\n      flex: 1,\r\n      flexDirection: \"column\",\r\n    },\r\n    car: {\r\n      padding: theme.spacing(4),\r\n    },\r\n    details: {\r\n      display: \"flex\",\r\n    },\r\n    avatar: {\r\n      marginLeft: \"auto\",\r\n      height: 110,\r\n      width: 100,\r\n      flexShrink: 0,\r\n      flexGrow: 0,\r\n    },\r\n    uploadButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n  });\r\n\r\ninterface Props {\r\n  classes: any;\r\n}\r\n\r\nclass Perfil extends React.Component<Props> {\r\n  public render() {\r\n    const classes = this.props.classes;\r\n    const user = {\r\n      name: \"Jemison Vidal\",\r\n      city: \"Itu\",\r\n      country: \"Brasil\",\r\n      timezone: \"\",\r\n      avatar: \"\",\r\n    };\r\n\r\n    return (\r\n      <Main>\r\n        <Grid container component=\"main\" className={classes.root}>\r\n          <CssBaseline />\r\n\r\n          <Grid container spacing={4} className={classes.paper}>\r\n            <Grid item xs={12} sm={12}>\r\n              <Card>\r\n                <CardContent>\r\n                  <div className={classes.details}>\r\n                    <div>\r\n                      <Typography gutterBottom variant=\"h3\">\r\n                        {user.name}\r\n                      </Typography>\r\n                      <Typography\r\n                        className={classes.locationText}\r\n                        color=\"textSecondary\"\r\n                        variant=\"body1\"\r\n                      >\r\n                        {user.city}, {user.country}\r\n                      </Typography>\r\n                      <Typography\r\n                        className={classes.dateText}\r\n                        color=\"textSecondary\"\r\n                        variant=\"body1\"\r\n                      >\r\n                        {moment().format(\"hh:mm A\")}\r\n                      </Typography>\r\n                    </div>\r\n                    <Avatar className={classes.avatar} src={user.avatar} />\r\n                  </div>\r\n                </CardContent>\r\n                <Divider />\r\n                <CardContent>\r\n                  <Grid container spacing={2}>\r\n                    <Grid item sm={6} xs={12}>\r\n                      <TextField\r\n                        fullWidth\r\n                        helperText=\"Please specify the first name\"\r\n                        label=\"First name\"\r\n                        margin=\"dense\"\r\n                        name=\"firstName\"\r\n                        //={handleChange}\r\n                        required\r\n                        // value={values.firstName}\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid item sm={6} xs={12}>\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"Last name\"\r\n                        margin=\"dense\"\r\n                        name=\"lastName\"\r\n                        // onChange={handleChange}\r\n                        required\r\n                        // value={values.lastName}\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid item sm={6} xs={12}>\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"Email Address\"\r\n                        margin=\"dense\"\r\n                        name=\"email\"\r\n                        //  onChange={handleChange}\r\n                        required\r\n                        //  value={values.email}\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid item sm={6} xs={12}>\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"Phone Number\"\r\n                        margin=\"dense\"\r\n                        name=\"phone\"\r\n                        //  onChange={handleChange}\r\n                        type=\"number\"\r\n                        //  value={values.phone}\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid item sm={6} xs={12}>\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"Select State\"\r\n                        margin=\"dense\"\r\n                        name=\"state\"\r\n                        // onChange={handleChange}\r\n                        required\r\n                        select\r\n                        // eslint-disable-next-line react/jsx-sort-props\r\n                        SelectProps={{ native: true }}\r\n                        // value={values.state}\r\n                        variant=\"outlined\"\r\n                      ></TextField>\r\n                    </Grid>\r\n                    <Grid item sm={6} xs={12}>\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"Country\"\r\n                        margin=\"dense\"\r\n                        name=\"country\"\r\n                        //onChange={handleChange}\r\n                        required\r\n                        // value={values.country}\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <CardActions>\r\n                    <Button color=\"primary\" variant=\"contained\">\r\n                      Save details\r\n                    </Button>\r\n                  </CardActions>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles)(Perfil);\r\n","import React from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router\";\r\nimport Home from \"../components/home/home\";\r\nimport Dashboard from \"../components/dashboard/dashboard\";\r\nimport Quadro from \"../components/quadro/quadro\";\r\nimport Perfil from \"../components/perfil/perfil\";\r\n\r\nexport default (props) => (\r\n  <Switch>\r\n    <Route exact path=\"/\" component={Home} />\r\n    <Route exact path=\"/perfil\" component={Perfil} />\r\n    <Route exact path=\"/dashboard\" component={Dashboard} />\r\n    <Route exact path=\"/quadro\" component={Quadro} />\r\n    <Redirect from=\"*\" to=\"/\" componet={Home} />\r\n  </Switch>\r\n);\r\n","import React from \"react\";\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  TableHead,\r\n  Table,\r\n  TableCell,\r\n  TableRow,\r\n} from \"@material-ui/core/\";\r\nimport { withStyles, Theme, createStyles } from \"@material-ui/core/styles\";\r\n\r\ninterface IProps {\r\n  classes: any;\r\n}\r\n\r\nconst useStyles = (theme: Theme) =>\r\n  createStyles({\r\n    social: {\r\n      flexDirection: \"column\",\r\n      alignItems: \"center\",\r\n      height: \"30px\",\r\n      width: \"35px\",\r\n      margin: theme.spacing(3, 3, 0, 3),\r\n      borderRadius: \"20px\",\r\n    },\r\n    image: {\r\n      backgroundImage:\r\n        \"url(https://source.unsplash.com/1600x900/?florest,water,dog)\",\r\n      backgroundRepeat: \"no-repeat\",\r\n      backgroundColor:\r\n        theme.palette.type === \"light\"\r\n          ? theme.palette.grey[50]\r\n          : theme.palette.grey[900],\r\n      backgroundSize: \"cover\",\r\n      backgroundPosition: \"center\",\r\n    },\r\n  });\r\n\r\nclass Contato extends React.Component<IProps> {\r\n  public render() {\r\n    const classes = this.props.classes;\r\n    return <Grid item xs={false} sm={4} md={7} className={classes.image} />;\r\n  }\r\n\r\n  private handleOpenLinkedIn() {\r\n    window.open(\"https://www.linkedin.com/in/jemison-vidal-7b7b17a9/\");\r\n  }\r\n\r\n  private handleOpenGitHub() {\r\n    window.open(\"https://github.com/JemisonVidal\");\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles)(Contato);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Media from \"react-media\";\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  CssBaseline,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  Paper,\r\n  Grid,\r\n  Typography,\r\n} from \"@material-ui/core/\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport { TextValidator, ValidatorForm } from \"react-material-ui-form-validator\";\r\nimport { withStyles, Theme, createStyles } from \"@material-ui/core/styles\";\r\nimport Contato from \"../contato/contato\";\r\nimport Auth from \"../../services/auth\";\r\nimport alertService from \"services/alertService\";\r\n\r\ninterface IState {\r\n  email: string;\r\n  password: string;\r\n  stayLoggedIn: boolean;\r\n  showPassword: boolean;\r\n}\r\n\r\ninterface IProps {\r\n  classes: any;\r\n}\r\n\r\nconst useStyles = (theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      height: \"100vh\",\r\n    },\r\n    paper: {\r\n      margin: theme.spacing(8, 4),\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      alignItems: \"center\",\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n      width: \"100%\",\r\n      paddingRight: \"3px\",\r\n      margin: theme.spacing(1, 3, 0.5, 2),\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(1, 0, 0.5, 0),\r\n    },\r\n    buttonSocial: {\r\n      margin: theme.spacing(0.5, 0, 0.5, 0),\r\n    },\r\n    colorLink: {\r\n      color: theme.palette.primary.main,\r\n    },\r\n  });\r\n\r\nclass Login extends React.Component<IProps, IState> {\r\n  public state = {\r\n    email: \"\",\r\n    isLoading: false,\r\n    password: \"\",\r\n    stayLoggedIn: false,\r\n    showPassword: false,\r\n  };\r\n\r\n  emailRef = React.createRef<TextValidator>();\r\n  passwordRef = React.createRef<TextValidator>();\r\n\r\n  public render() {\r\n    const classes = this.props.classes;\r\n\r\n    return (\r\n      <ValidatorForm onSubmit={this.handleLoginSubmit}>\r\n        <Grid container component=\"main\" className={classes.root}>\r\n          <CssBaseline />\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            sm={8}\r\n            md={5}\r\n            component={Paper}\r\n            elevation={6}\r\n            square\r\n          >\r\n            <div className={classes.paper}>\r\n              <Avatar className={classes.avatar}>\r\n                <LockOutlinedIcon />\r\n              </Avatar>\r\n              <Typography component=\"h1\" variant=\"h5\">\r\n                Login\r\n              </Typography>\r\n              <form className={classes.form} noValidate>\r\n                <TextValidator\r\n                  value={this.state.email}\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  onChange={this.handleEmailChange}\r\n                  type=\"email\"\r\n                  id=\"email\"\r\n                  label=\"Email\"\r\n                  name=\"email\"\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[\"O Email é Obrigatório\"]}\r\n                  onBlur={this.handleEmailBlur}\r\n                  ref={this.emailRef}\r\n                />\r\n                <TextValidator\r\n                  value={this.state.password}\r\n                  onChange={this.handlePasswordChange}\r\n                  margin=\"normal\"\r\n                  type=\"password\"\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  name=\"password\"\r\n                  label=\"Senha\"\r\n                  id=\"password\"\r\n                  autoComplete=\"current-password\"\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[\"A senha é obrigatória\"]}\r\n                  onBlur={this.handlePasswordBlur}\r\n                  ref={this.passwordRef}\r\n                />\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      checked={this.state.stayLoggedIn}\r\n                      onChange={this.handleStayLoggedIn}\r\n                      value=\"remember\"\r\n                      color=\"primary\"\r\n                    />\r\n                  }\r\n                  label=\"Permanecer conectado\"\r\n                />\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.submit}\r\n                >\r\n                  Entrar\r\n                </Button>\r\n                <Grid container>\r\n                  <Grid item xs>\r\n                    <Link to=\"#\" className={classes.colorLink}>\r\n                      Esqueceu a senha ?\r\n                    </Link>\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Link to=\"/singUp\" className={classes.colorLink}>\r\n                      {\"Cadastre-se\"}\r\n                    </Link>\r\n                  </Grid>\r\n                </Grid>\r\n              </form>\r\n            </div>\r\n          </Grid>\r\n          <Media query=\"(min-width: 600px)\" render={() => <Contato />} />\r\n        </Grid>\r\n      </ValidatorForm>\r\n    );\r\n  }\r\n\r\n  private handleEmailChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({ email: event.target.value });\r\n  };\r\n\r\n  private handlePasswordChange = (\r\n    event: React.ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    this.setState({ password: event.target.value });\r\n  };\r\n\r\n  private handleEmailBlur = (event: React.FocusEvent<HTMLInputElement>) => {\r\n    (this.emailRef.current as any).validate(event.target.value);\r\n  };\r\n\r\n  private handlePasswordBlur = (event: React.FocusEvent<HTMLInputElement>) => {\r\n    (this.emailRef.current as any).validate(event.target.value);\r\n  };\r\n\r\n  private handleStayLoggedIn = () => {\r\n    this.setState({ stayLoggedIn: !this.state.stayLoggedIn });\r\n  };\r\n\r\n  private handleLoginSubmit = async () => {\r\n    try {\r\n      if (!this.state.email) {\r\n        alertService.addNotification(\"O Email é Obrigatório\", \"error\");\r\n        return;\r\n      } else if (!this.state.password) {\r\n        alertService.addNotification(\"A Senha é Obrigatória\", \"error\");\r\n        return;\r\n      }\r\n      await Auth.login(\r\n        this.state.email,\r\n        this.state.password,\r\n        this.state.stayLoggedIn\r\n      );\r\n    } catch (error) {\r\n      alertService.addNotification(\"Usuário/Senha inválidos!\", \"error\");\r\n    }\r\n  };\r\n}\r\nexport default withStyles(useStyles)(Login);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Media from \"react-media\";\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  CssBaseline,\r\n  TextField,\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n  withStyles,\r\n  createStyles,\r\n  Theme,\r\n} from \"@material-ui/core/\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport { TextValidator, ValidatorForm } from \"react-material-ui-form-validator\";\r\nimport Contato from \"../contato/contato\";\r\nimport Auth from \"../../services/auth\";\r\nimport alertService from \"services/alertService\";\r\n\r\nconst useStyles = (theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      height: \"100vh\",\r\n    },\r\n    paper: {\r\n      margin: theme.spacing(8, 4),\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      alignItems: \"center\",\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n      width: \"100%\",\r\n      marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 0.5, 0),\r\n    },\r\n    colorLink: {\r\n      margin: theme.spacing(0),\r\n      color: theme.palette.primary.main,\r\n    },\r\n  });\r\n\r\ninterface Props {\r\n  classes: any;\r\n}\r\n\r\nclass SingUp extends React.Component<Props> {\r\n  firstNameRef = React.createRef<TextValidator>();\r\n  lastNameRef = React.createRef<TextValidator>();\r\n  emailRef = React.createRef<TextValidator>();\r\n  passwordRef = React.createRef<TextValidator>();\r\n\r\n  public state = {\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    stayLoggedIn: false,\r\n  };\r\n\r\n  public render() {\r\n    const classes = this.props.classes;\r\n\r\n    return (\r\n      <ValidatorForm onSubmit={this.handleCreateAccount}>\r\n        <Grid container component=\"main\" className={classes.root}>\r\n          <CssBaseline />\r\n          <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6}>\r\n            <div className={classes.paper}>\r\n              <Avatar className={classes.avatar}>\r\n                <LockOutlinedIcon />\r\n              </Avatar>\r\n              <Typography component=\"h1\" variant=\"h5\">\r\n                Cadastro\r\n              </Typography>\r\n              <form className={classes.form} noValidate>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={12} sm={6}>\r\n                    <TextValidator\r\n                      value={this.state.firstName}\r\n                      autoComplete=\"fname\"\r\n                      name=\"firstName\"\r\n                      variant=\"outlined\"\r\n                      required\r\n                      fullWidth\r\n                      id=\"firstName\"\r\n                      label=\"Primeiro Nome\"\r\n                      onChange={this.handleFirstNameChange}\r\n                      autoFocus\r\n                      validators={[\"required\"]}\r\n                      errorMessages={[\"O Nome é Obrigatório\"]}\r\n                      onBlur={this.handleFirstNameBlur}\r\n                      ref={this.firstNameRef}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6}>\r\n                    <TextValidator\r\n                      value={this.state.lastName}\r\n                      variant=\"outlined\"\r\n                      required\r\n                      fullWidth\r\n                      id=\"lastName\"\r\n                      label=\"Último Nome\"\r\n                      name=\"lastName\"\r\n                      onChange={this.handleLastNameChange}\r\n                      autoComplete=\"lname\"\r\n                      validators={[\"required\"]}\r\n                      errorMessages={[\"O Ultimo nome é Obrigatório\"]}\r\n                      onBlur={this.handleLastNameBlur}\r\n                      ref={this.lastNameRef}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <TextValidator\r\n                      value={this.state.email}\r\n                      variant=\"outlined\"\r\n                      required\r\n                      fullWidth\r\n                      onChange={this.handleEmailChange}\r\n                      type=\"email\"\r\n                      id=\"email\"\r\n                      label=\"Email\"\r\n                      name=\"email\"\r\n                      validators={[\"required\"]}\r\n                      errorMessages={[\"O Email é Obrigatório\"]}\r\n                      onBlur={this.handleEmailBlur}\r\n                      ref={this.emailRef}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <TextValidator\r\n                      value={this.state.password}\r\n                      onChange={this.handlePasswordChange}\r\n                      type=\"password\"\r\n                      variant=\"outlined\"\r\n                      required\r\n                      fullWidth\r\n                      name=\"password\"\r\n                      label=\"Senha\"\r\n                      id=\"password\"\r\n                      autoComplete=\"current-password\"\r\n                      validators={[\"required\"]}\r\n                      errorMessages={[\"A senha é obrigatória\"]}\r\n                      onBlur={this.handlePasswordBlur}\r\n                      ref={this.passwordRef}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.submit}\r\n                >\r\n                  Cadastrar\r\n                </Button>\r\n                <Grid container justify=\"flex-end\">\r\n                  <Grid item>\r\n                    <Link to=\"/\" className={classes.colorLink}>\r\n                      Já possui uma conta ?\r\n                    </Link>\r\n                  </Grid>\r\n                </Grid>\r\n              </form>\r\n            </div>\r\n          </Grid>\r\n          <Media query=\"(min-width: 600px)\" render={() => <Contato />} />\r\n        </Grid>\r\n      </ValidatorForm>\r\n    );\r\n  }\r\n\r\n  private handleFirstNameChange = (\r\n    event: React.ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    this.setState({ firstName: event.target.value });\r\n  };\r\n\r\n  private handleLastNameChange = (\r\n    event: React.ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    this.setState({ lastName: event.target.value });\r\n  };\r\n\r\n  private handleEmailChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({ email: event.target.value });\r\n  };\r\n\r\n  private handlePasswordChange = (\r\n    event: React.ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    this.setState({ password: event.target.value });\r\n  };\r\n\r\n  private handleFirstNameBlur = (event: React.FocusEvent<HTMLInputElement>) => {\r\n    (this.firstNameRef.current as any).validate(event.target.value);\r\n  };\r\n\r\n  private handleLastNameBlur = (event: React.FocusEvent<HTMLInputElement>) => {\r\n    (this.lastNameRef.current as any).validate(event.target.value);\r\n  };\r\n\r\n  private handleEmailBlur = (event: React.FocusEvent<HTMLInputElement>) => {\r\n    (this.emailRef.current as any).validate(event.target.value);\r\n  };\r\n\r\n  private handlePasswordBlur = (event: React.FocusEvent<HTMLInputElement>) => {\r\n    (this.emailRef.current as any).validate(event.target.value);\r\n  };\r\n\r\n  private handleCreateAccount = async () => {\r\n    try {\r\n      if (!this.state.email) {\r\n        alertService.addNotification(\"O Email é Obrigatório\", \"error\");\r\n        return;\r\n      } else if (!this.state.password) {\r\n        alertService.addNotification(\"A Senha é Obrigatória\", \"error\");\r\n        return;\r\n      }\r\n\r\n      await Auth.createUserWithEmailAndPassword(\r\n        this.state.email,\r\n        this.state.password\r\n      );\r\n      window.location.pathname = \"/\";\r\n    } catch (error) {\r\n      switch (error.code) {\r\n        case \"auth/weak-password\":\r\n          alertService.addNotification(\r\n            \"Senha fraca! informe outra senha.\",\r\n            \"warning\"\r\n          );\r\n          break;\r\n        case \"auth/email-already-in-use\":\r\n          alertService.addNotification(\r\n            \"Email já esta sendo utilizado!\",\r\n            \"warning\"\r\n          );\r\n          break;\r\n        default:\r\n          alertService.addNotification(\"Senha inválida\", \"error\");\r\n      }\r\n    }\r\n  };\r\n}\r\nexport default withStyles(useStyles)(SingUp);\r\n","import React from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router\";\r\nimport Login from \"../components/login/login\";\r\nimport SingUp from \"../components/singUp/singUp\";\r\n\r\nexport default (props) => (\r\n  <Switch>\r\n    <Route exact path=\"/\" component={Login} />\r\n    <Route exact path=\"/singUp\" component={SingUp} />\r\n    <Redirect from=\"*\" to=\"/\" componet={Login} />\r\n  </Switch>\r\n);\r\n","import * as React from \"react\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { observer } from \"mobx-react\";\r\nimport { createStyles, withStyles, Theme } from \"@material-ui/core\";\r\nimport authStore from \"store/authStore\";\r\nimport RouterApp from \"../../routes/Routes\";\r\nimport RouterAuth from \"../../routes/RoutesAuth\";\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flex: 1,\r\n    },\r\n  });\r\n\r\ninterface IProps {\r\n  classes: any;\r\n}\r\n\r\n@observer\r\nclass Start extends React.Component<IProps> {\r\n  public render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <BrowserRouter>\r\n        <div className={classes.root}>\r\n          {authStore.loggedUser ? <RouterApp /> : <RouterAuth />}\r\n        </div>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Start);\r\n","import React from \"react\";\r\nimport {\r\n  Theme,\r\n  createStyles,\r\n  withStyles,\r\n  LinearProgress,\r\n  Grid,\r\n  CssBaseline,\r\n} from \"@material-ui/core/\";\r\n\r\nconst useStyles = (theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      height: \"100vh\",\r\n      width: \"100%\",\r\n      \"& > * + *\": {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n    },\r\n    content: {\r\n      maxHeight: \"50%\",\r\n      maxWidth: \"50%\",\r\n    },\r\n    progress: {\r\n      height: \"100vh\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n    },\r\n  });\r\n\r\ninterface Props {\r\n  classes: any;\r\n}\r\n\r\nclass Progress extends React.Component<Props> {\r\n  public state = {\r\n    completed: 49,\r\n  };\r\n\r\n  public render() {\r\n    const classes = this.props.classes;\r\n    if (this.state.completed < 100) {\r\n      this.progress();\r\n    }\r\n\r\n    return (\r\n      <Grid container component=\"main\">\r\n        <CssBaseline />\r\n        <div className={classes.root}>\r\n          <Grid container component=\"main\" className={classes.progress}>\r\n            <Grid item className={classes.content}>\r\n              <LinearProgress\r\n                variant=\"determinate\"\r\n                value={this.state.completed}\r\n              />\r\n              Carregando\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  private progress() {\r\n    const timer = setInterval(() => {\r\n      const diff = Math.random() * 10;\r\n      const oldCompleted = this.state.completed;\r\n      this.setState({ completed: Math.min(oldCompleted + diff, 100) });\r\n    }, 50);\r\n\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles)(Progress);\r\n","import React from \"react\";\nimport { observer, Provider } from \"mobx-react\";\nimport { createMuiTheme, MuiThemeProvider } from \"@material-ui/core\";\nimport auth from \"./services/auth\";\nimport authStore from \"store/authStore\";\nimport Alert from \"components/alert/alert\";\nimport AlertService from \"./services/alertService\";\nimport Start from \"components/start/start\";\nimport Progress from \"components/progress/progress\";\n\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: [\"Trebuchet MS\", \"Roboto\", \"Arial\"].join(\",\"),\n  },\n  palette: {\n    //type: \"dark\",\n    background: {\n      default: \"#ffff\",\n      paper: \"#ffff\",\n    },\n\n    primary: {\n      contrastText: \"#fff\",\n      main: \"#136F63\",\n    },\n    secondary: {\n      contrastText: \"#fff\",\n      main: \"#136F63\",\n    },\n  },\n});\n\n@observer\nclass App extends React.Component {\n  constructor(props: any) {\n    super(props);\n    auth.startListenFirebaseAuthChange();\n  }\n\n  private providerProps = {\n    alertService: AlertService,\n  };\n\n  public render() {\n    return (\n      <Provider {...this.providerProps}>\n        <MuiThemeProvider theme={theme}>\n          <Alert />\n          {authStore.isCheckedAuth ? <Start /> : <Progress />}\n        </MuiThemeProvider>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}